<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yc.feed.dao.mapper.CommentTagMapper" >
  <resultMap id="BaseResultMap" type="com.yc.feed.domain.entity.CommentTag" >
    <id column="comment_tag_id" property="commentTagId" jdbcType="INTEGER" />
    <result column="conflict_tag_id" property="conflictTagId" jdbcType="INTEGER" />
    <result column="tag_text" property="tagText" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="rank" property="rank" jdbcType="INTEGER" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    comment_tag_id, conflict_tag_id, tag_text, score, type, status, rank, operator_id, 
    create_time, update_time, flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment_tag
    where comment_tag_id = #{commentTagId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment_tag
    where comment_tag_id = #{commentTagId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yc.feed.domain.entity.CommentTag" >
    insert into comment_tag (conflict_tag_id, tag_text,
      score, type, status, 
      rank, operator_id, create_time, 
      update_time, flag)
    values (#{conflictTagId,jdbcType=INTEGER}, #{tagText,jdbcType=VARCHAR},
      #{score,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{rank,jdbcType=INTEGER}, #{operatorId,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yc.feed.domain.entity.CommentTag" >
    insert into comment_tag
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentTagId != null" >
        comment_tag_id,
      </if>
      <if test="conflictTagId != null" >
        conflict_tag_id,
      </if>
      <if test="tagText != null" >
        tag_text,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="rank != null" >
        rank,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentTagId != null" >
        #{commentTagId,jdbcType=INTEGER},
      </if>
      <if test="conflictTagId != null" >
        #{conflictTagId,jdbcType=INTEGER},
      </if>
      <if test="tagText != null" >
        #{tagText,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="rank != null" >
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yc.feed.domain.entity.CommentTag" >
    update comment_tag
    <set >
      <if test="conflictTagId != null" >
        conflict_tag_id = #{conflictTagId,jdbcType=INTEGER},
      </if>
      <if test="tagText != null" >
        tag_text = #{tagText,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="rank != null" >
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where comment_tag_id = #{commentTagId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yc.feed.domain.entity.CommentTag" >
    update comment_tag
    set conflict_tag_id = #{conflictTagId,jdbcType=INTEGER},
      tag_text = #{tagText,jdbcType=VARCHAR},
      score = #{score,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      rank = #{rank,jdbcType=INTEGER},
      operator_id = #{operatorId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER}
    where comment_tag_id = #{commentTagId,jdbcType=INTEGER}
  </update>



  <select id="list" parameterType="com.yc.feed.domain.entity.CommentTag" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_tag
    WHERE TRUE
    <if test="status != null" >
      AND status = #{status,jdbcType=TINYINT}
    </if>
  </select>


  <select id="listByQueryString" parameterType="com.yc.feed.api.http.req.GetTagsReq" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_tag
    WHERE TRUE
    <if test="status != null" >
      AND status IN
      <foreach item="item" index="index" collection="status" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
    <if test="type != null" >
      AND type = #{type,jdbcType=TINYINT}
    </if>
    <if test="rank != null" >
      AND rank = #{rank,jdbcType=INTEGER}
    </if>
    <if test="conflictTagIds != null" >
      AND conflict_tag_id IN
      <foreach item="item" index="index" collection="conflictTagIds" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
    <if test="tagText != null" >
      AND tag_text LIKE #{tagText,jdbcType=INTEGER}
    </if>
</select>
 <!-- ORDER BY rank,status-->


  <select id="listNegative" parameterType="com.yc.feed.domain.entity.CommentTag" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_tag
    WHERE score!=0 and type=-1 and status=1 order by score desc
  </select>
</mapper>